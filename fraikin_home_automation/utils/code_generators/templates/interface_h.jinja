#ifndef {{InterfaceNameUpperCase}}_H
#define {{InterfaceNameUpperCase}}_H
#include "{{IncludeStatementDataType}}"
#include "interface_base.h"
#ifdef NON_TARGET_BUILD
#include "fraikin_home_automation/utils/test_stubs/arduino_mock.h"
#else
#include <Arduino.h>
#endif

class {{InterfaceNamePascalCase}} : public InterfaceBase<{{InterfaceNamePascalCase}}, {{DataTypeNamePascalCase}}> {
  public:
    using DataType = {{DataTypeNamePascalCase}};

    static String GetInterfaceCommunicationString() {
        {% if ShortNameDefined %}
        String out_string = "{{InterfaceShortNamePascalCase}}";
        {% else %}
        String out_string = "{{InterfaceNamePascalCase}}";
        {% endif %}
        out_string += " : ";
        {% for data_type_variable in DataTypeVariables %}
        out_string += "{{data_type_variable}}=";
        out_string += String(InterfaceBase<{{InterfaceNamePascalCase}}, {{DataTypeNamePascalCase}}>::GetData().{{data_type_variable}});
        out_string += " | ";
        {% endfor %}
        return out_string;
    }

    static void SendOnChangeData(const bool send_on_change_data) {
        GetSendOnChangeDataRaw() = send_on_change_data;
    }

    static bool& GetSendOnChangeDataRaw() {
        static bool send_on_change_data{};
        return send_on_change_data;
    }

};

#endif // {{InterfaceNameUpperCase}}_H
